# define chip used in this project, this set must define before project definition
# for this project dont use cmake commandline option -DSTM32_CHIP=<chip>
set(STM32_CHIP STM32H755xx)
set(STM32_CORE "M7")
set(TARGET_TRIPLET arm-none-eabi)
set(SIGNALMESH_ROOTDIR "../..")
set(CMAKE_TOOLCHAIN_FILE ${SIGNALMESH_ROOTDIR}/toolchain/cmake/gcc_stm32.cmake)
set(CMAKE_MODULE_PATH ${SIGNALMESH_ROOTDIR}/toolchain)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/../../toolchain/cmake")


set(CHIBIOS_ROOT ${SIGNALMESH_ROOTDIR}/import/ChibiOS)
cmake_minimum_required(VERSION 3.4)

project(audio_peripheral_module)

#set(STARTUP_SOURCES
#  ${CHIBIOS_ROOT}/os/common/startup/ARMCMx/startup_stm32h7xx.s
#)

ENABLE_LANGUAGE(ASM)

# Make sure .S files are recognized and compiled
set_source_files_properties(
    ${CHIBIOS_ROOT}/os/common/startup/ARMCMx/compilers/GCC/crt0_v7m.S
    ${CHIBIOS_ROOT}/os/common/startup/ARMCMx/compilers/GCC/vectors.S
    ${CHIBIOS_ROOT}/os/common/ports/ARMv7-M/compilers/GCC/chcoreasm.S
    PROPERTIES LANGUAGE ASM
)
# test build all available ChibiOS COMPONENTS for H7 chip
FIND_PACKAGE(ChibiOS 21 COMPONENTS
    rt
    hal
    pal
    adc bdma crypto dac ext fdcan gpio i2c mac mdma otg qspi sdmmc spi rng rtc systick tim uart wdg dma
    chprintf
    memstreams
    nullstreams
    evtimer
    shell
    syscalls
    REQUIRED
)

#FIND_PACKAGE(ChibiOS 16 COMPONENTS rt hal pal  REQUIRED)

INCLUDE_DIRECTORIES(
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${ChibiOS_INCLUDE_DIRS}
        cfg/
)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 ")

ADD_DEFINITIONS(-DCORTEX_USE_FPU=TRUE -DCORE_CM7 -DCHPRINTF_USE_FLOAT=1)

SET(STM32_LINKER_SCRIPT ${ChibiOS_LINKER_SCRIPT})


set(SOURCE_FILES
  src/adc.c
)

#add_executable(${CMAKE_PROJECT_NAME}.elf ${SOURCE_FILES}  ${ChibiOS_SOURCES})
add_executable(${CMAKE_PROJECT_NAME}.elf
    ${SOURCE_FILES}
    ${ChibiOS_SOURCES}
    ${CHIBIOS_RT_STARTUP_SOURCES}

    #${CHIBIOS_KERNEL_SRC}
    #${CHIBIOS_HAL_SRC}
    #${CHIBIOS_COMMON_SRC}
)
target_include_directories(${CMAKE_PROJECT_NAME}.elf PRIVATE ${ChibiOS_INCLUDE_DIRS})

target_link_libraries(${CMAKE_PROJECT_NAME}.elf PRIVATE m)

#target_link_libraries(audio_peripheral_module m)

STM32_SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME}.elf)
STM32_ADD_HEX_BIN_TARGETS(${CMAKE_PROJECT_NAME}.elf)
STM32_PRINT_SIZE_OF_TARGETS(${CMAKE_PROJECT_NAME}.elf)
