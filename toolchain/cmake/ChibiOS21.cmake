IF(NOT ChibiOS_FIND_COMPONENTS)
    SET(ChibiOS_FIND_COMPONENTS nil hal st)
    MESSAGE(STATUS "No ChibiOS components specified, using default: ${ChibiOS_FIND_COMPONENTS}")
ENDIF()


LIST(FIND ChibiOS_FIND_COMPONENTS nil ChibiOS_FIND_COMPONENTS_nil)
LIST(FIND ChibiOS_FIND_COMPONENTS rt ChibiOS_FIND_COMPONENTS_rt)
LIST(FIND ChibiOS_FIND_COMPONENTS hal ChibiOS_FIND_COMPONENTS_hal)
LIST(FIND ChibiOS_FIND_COMPONENTS st ChibiOS_FIND_COMPONENTS_st)

IF((${ChibiOS_FIND_COMPONENTS_nil} LESS 0) AND (${ChibiOS_FIND_COMPONENTS_rt} LESS 0))
  MESSAGE(STATUS "No kernel component selected, using Nil kernel")
  LIST(APPEND ChibiOS_FIND_COMPONENTS nil)
  SET(CHIBIOS_KERNEL nil)
ELSE()
  IF((NOT (${ChibiOS_FIND_COMPONENTS_nil} LESS 0)) AND (NOT (${ChibiOS_FIND_COMPONENTS_rt} LESS 0)))
    MESSAGE(FATAL_ERROR "Cannot use RT and Nil kernel at the same time")
  ENDIF()
  IF(NOT (${ChibiOS_FIND_COMPONENTS_nil} LESS 0))
    SET(CHIBIOS_KERNEL nil)
  ELSE()
    SET(CHIBIOS_KERNEL rt)
  ENDIF()
ENDIF()

IF(${ChibiOS_FIND_COMPONENTS_hal} LESS 0)
  LIST(APPEND ChibiOS_FIND_COMPONENTS hal)
ENDIF()

IF(${ChibiOS_FIND_COMPONENTS_st} LESS 0)
  LIST(APPEND ChibiOS_FIND_COMPONENTS st)
ENDIF()

INCLUDE(ChibiOS21_LD)
INCLUDE(ChibiOS21_HAL)
INCLUDE(ChibiOS21_Community)


IF(${CHIBIOS_KERNEL} STREQUAL rt)
  INCLUDE(ChibiOS21_RT)
ELSE()
  INCLUDE(ChibiOS21_NIL)
ENDIF()

INCLUDE(ChibiOS21_Various)

SET(CHIBIOS_COMPONENTS nil rt hal ${CHIBIOS_HAL_MODULES} ${CHIBIOS_HAL_LIB_MODULES} ${CHIBIOS_VARIOUS_MODULES} ${CHIBIOS_COMMUNITY_MODULES})

IF(NOT ChibiOS_LINKER_SCRIPT)
    MESSAGE(STATUS "ChibiOS doesn't have linker script for your chip, please specify it directly using ChibiOS_LINKER_SCRIPT variable.")
ENDIF()

FOREACH(comp ${ChibiOS_FIND_COMPONENTS})
    # ensure the component is valid
    LIST(FIND CHIBIOS_COMPONENTS ${comp} INDEX)
    IF(INDEX EQUAL -1)
        MESSAGE(FATAL_ERROR "Unknown ChibiOS component: ${comp}\nSupported ChibiOS components: ${CHIBIOS_COMPONENTS}")
    ENDIF()

    # Resolve normal sources listed in CHIBIOS_<comp>_SOURCES.
    IF(CHIBIOS_${comp}_SOURCES)
        foreach(_src IN LISTS CHIBIOS_${comp}_SOURCES)
            # try to find the source file under the component search path(s)
            find_file(_src_path NAMES ${_src} PATHS ${CHIBIOS_${comp}_SEARCH_PATH} NO_DEFAULT_PATH CMAKE_FIND_ROOT_PATH_BOTH)
            if(_src_path)
                list(APPEND ChibiOS_SOURCES "${_src_path}")
            else()
                # If the entry already looks like an absolute path, accept it
                if(EXISTS "${_src}")
                    list(APPEND ChibiOS_SOURCES "${_src}")
                else()
                    message(FATAL_ERROR "Cannot find source '${_src}' for component '${comp}' in paths: ${CHIBIOS_${comp}_SEARCH_PATH}")
                endif()
            endif()
        endforeach()
    ENDIF()

    # Resolve platform-specific sources (search in PLATFORM_SEARCH_PATH)
    IF(CHIBIOS_${comp}_PLATFORM_SOURCES)
        foreach(_psrc IN LISTS CHIBIOS_${comp}_PLATFORM_SOURCES)
            find_file(_psrc_path NAMES ${_psrc} PATHS ${CHIBIOS_${comp}_PLATFORM_SEARCH_PATH} NO_DEFAULT_PATH CMAKE_FIND_ROOT_PATH_BOTH)
            if(_psrc_path)
                list(APPEND ChibiOS_SOURCES "${_psrc_path}")
            else()
                # try absolute path fallback (sometimes platform vars already contain full paths)
                if(EXISTS "${CHIBIOS_${comp}_PLATFORM_SEARCH_PATH}/${_psrc}")
                    list(APPEND ChibiOS_SOURCES "${CHIBIOS_${comp}_PLATFORM_SEARCH_PATH}/${_psrc}")
                else()
                    message(FATAL_ERROR "Cannot find platform source '${_psrc}' for component '${comp}' in paths: ${CHIBIOS_${comp}_PLATFORM_SEARCH_PATH}")
                endif()
            endif()
        endforeach()
    ENDIF()

    # Resolve include directories for the component headers
    IF(CHIBIOS_${comp}_SEARCH_HEADERS)
        foreach(_hdr IN LISTS CHIBIOS_${comp}_SEARCH_HEADERS)
            find_path(_hdr_dir NAMES ${_hdr} PATHS ${CHIBIOS_${comp}_SEARCH_PATH} NO_DEFAULT_PATH CMAKE_FIND_ROOT_PATH_BOTH)
            if(_hdr_dir)
                list(APPEND ChibiOS_INCLUDE_DIRS "${_hdr_dir}")
            else()
                message(FATAL_ERROR "Cannot find header '${_hdr}' for component '${comp}' in paths: ${CHIBIOS_${comp}_SEARCH_PATH}")
            endif()
        endforeach()
    ENDIF()

    # Resolve platform-specific include directories
    IF(CHIBIOS_${comp}_PLATFORM_SEARCH_HEADERS)
        foreach(_phdr IN LISTS CHIBIOS_${comp}_PLATFORM_SEARCH_HEADERS)
            find_path(_phdr_dir NAMES ${_phdr} PATHS ${CHIBIOS_${comp}_PLATFORM_SEARCH_PATH} NO_DEFAULT_PATH CMAKE_FIND_ROOT_PATH_BOTH)
            if(_phdr_dir)
                list(APPEND ChibiOS_INCLUDE_DIRS "${_phdr_dir}")
            else()
                message(WARNING "Platform header '${_phdr}' for component '${comp}' not found in ${CHIBIOS_${comp}_PLATFORM_SEARCH_PATH}")
                # Not fatal: some platform headers can be optional, adjust as needed.
            endif()
        endforeach()
    ENDIF()
ENDFOREACH()

